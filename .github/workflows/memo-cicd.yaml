name: Memo App CI/CD Workflow

on:
  push:
    branches:
      - develop
    paths-ignore:
      - 'manifest/**'

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Make Properties file
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application.properties
        shell: bash

      - name: Build with Maven
        run: mvn clean package --file pom.xml -DskipTests

      - name: Rename jar file
        run: mv ./target/*.jar ./target/memo-app.jar

      - name: Check jar file
        run: ls -l ./target

      - uses: actions/upload-artifact@v4
        with:
          name: memo-app
          path: ./target/memo-app.jar

#      # DockerHub
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          dockerfile: ./Dockerfile
#          push: true
#          platforms: linux/arm64,linux/amd64
#          tags: |
#            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest
#            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}

      # ECR
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Build
        run: docker buildx build -t app .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR Private
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  argo_cd:
    runs-on: ubuntu-latest

    needs: ci

    steps:
      - uses: actions/checkout@v4
        with:
          ref: develop
          token: ${{ secrets.TOKEN }}

#      # DockerHub
#      - name: Update image in deployment manifest
#        run: |
#          sed -i "s%image: .*%image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}%" ./manifest/app/memo-deployment.yaml

      # ECR
      - name: Set up Image
        run: |
          sed -i "s%image: ${{ secrets.ECR_URL }}:[A-z0-9]*%image: ${{ secrets.ECR_URL }}:${{ github.sha }}%" ./manifest/app/memo-app.yaml

      - name: Commit and push changes
        run: |
          git config --local user.email "${{ secrets.GIT_EMAIL }}"
          git config --local user.name "${{ secrets.GIT_NAME }}"
          
          git add ./manifest/app/memo-app.yaml
          git commit -m "Update manifest deployment yaml file for ArgoCD"
          git push
